<?php
// +----------------------------------------------------------------------
// | ThinkPHP [ WE CAN DO IT JUST THINK ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006-2016 http://thinkphp.cn All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: 流年 <liu21st@gmail.com>
// +----------------------------------------------------------------------

// 应用公共文件

/**
 * ajax_return Ajax方式返回数据到客户端
 * @param   array $data 要返回的数据
 * @param   string $type AJAX返回数据格式
 * @param    return    void    结果集
 */
function ajax_return($status = 1, $msg = '', $data = '')
{
    //表单令牌
    global $token;
    if ($token) {
        unset($_SESSION["token"]);
        $token = md5(date("Y-m-d H$:i:s") . $this->rand_code(6));
        if ($status == 0) {
            $_SESSION["token"] = $token;
        }
    } else {
        $token = "";
    }

    //返回数据
    $return = array(
        'status' => $status,
        'msg' => $msg,
        'data' => $data,
        'token' => $token
    );
    // 默认返回JSON数据格式到客户端 包含状态信息
    header('Content-Type:application/json; charset=utf-8');
    exit(json_encode($return, JSON_UNESCAPED_UNICODE));
}

/**
 * dump                    打印变量
 * @param    mixed $var 变量
 * @return    void            无返回结果
 */
function custom_dump($var)
{
    ob_start();
    var_dump($var);
    $output = ob_get_clean();
    $output = preg_replace('/\]\=\>\n(\s+)/m', '] => ', $output);
    $output = '<pre>' . htmlspecialchars($output, ENT_QUOTES) . '</pre>';
    echo($output);
}

/**
 * rand_code                    生成随机码
 * @param  int $len 随机码长度
 * @param  string $type 随机码类型：num-数字，str-小写字母，astr-大写字母，both-小写字母和数字，all-全部字符
 * @return string    $result    返回随机码
 */
function rand_code($len = 6, $type = 'num')
{
    $result = '';
    $num = '0123456789';
    $str = 'abcdefghijklmnopqrstuvwxyz';
    $astr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $typelist = array(
        'num' => $num,
        'str' => $str,
        'astr' => $astr,
        'both' => $str . $num,
        'all' => $astr . $str . $num
    );
    for ($i = 0; $i < $len; $i++) {
        $result .= substr($typelist[$type], mt_rand(0, strlen($typelist[$type]) - 1), 1);
    }
    return $result;
}

/**
 * sql_format                格式化插入数据库的短字符串（用于用户名、usercode、邮箱等）
 * @param    string $str 要转换的字符串
 * @return    string $str        返回结果集
 */
function sql_format($str)
{
    //过滤用户输入
    $str = urldecode($str);
    $str = str_format_filter($str);
    //删除非法字符
    $str = str_replace("'", "", $str);
    $str = str_replace("&", "", $str);
    $str = str_replace("=", "", $str);
    $str = str_replace("\"", "", $str);
    $str = str_replace("\\", "", $str);

    return $str;
}

/**
 * str_format_filter        字符串过滤函数
 * @param    string $str 要过滤的字符串
 * @return    string $str        返回结果集
 */
function str_format_filter($str)
{
    //转换空格
    $str = str_replace("　", " ", $str); //全角空格
    $str = str_replace(" ", " ", $str); //一个奇怪的空格符
    $str = str_replace(chr(9), " ", $str); //制表符
    //特殊符号
    $arr = array(
        '＜' => '《',
        '＞' => '》',
        '〝' => '“',
        '〞' => '”',
        '′' => "'",
        '﹙' => '（',
        '﹚' => '）',
        '\\' => '' //过滤转义字符
    );
    $str = strtr($str, $arr);

    //html转义字符
    $str = str_ireplace("&amp;", "&", $str);
    $str = str_ireplace("&nbsp;", " ", $str);
    $str = str_ireplace("&quot;", "\"", $str);
    $str = str_ireplace("&lt;", "<", $str);
    $str = str_ireplace("&gt;", ">", $str);
    $str = str_ireplace("&#8206;", "", $str);

    //删除多余空格
    $str = preg_replace('/\s+/', ' ', $str);

    //删除多余单引号
    $str = preg_replace("/\'+/", "'", $str);

    //过滤字符串首尾空格
    $str = trim($str);

    return $str;
}

/**
 * get_client_ip            获取客户端IP地址
 * @param integer $type 返回类型：0-返回IP地址，1-返回IPV4地址数字
 * @return string            返回结果集
 */
function get_client_ip($type = 1)
{
    $ip = "";
    if (isset($_SERVER['HTTP_X_CLIENTIP'])) {
        $ip = $_SERVER['HTTP_X_CLIENTIP'];
    } elseif (isset ($_SERVER ['HTTP_X_FORWARDED_FOR'])) {
        $arr = explode(',', $_SERVER ['HTTP_X_FORWARDED_FOR']);
        $pos = array_search('unknown', $arr);
        if (false !== $pos)
            unset ($arr [$pos]);
        $ip = trim($arr [0]);
    } elseif (isset ($_SERVER ['HTTP_CLIENT_IP'])) {
        $ip = $_SERVER ['HTTP_CLIENT_IP'];
    } elseif (isset ($_SERVER ['REMOTE_ADDR'])) {
        $ip = $_SERVER ['REMOTE_ADDR'];
    } elseif (isset($_SERVER['HTTP_X_CLIENTIP']) && isset ($_SERVER ['REMOTE_ADDR'])) {
        $ip = $_SERVER ['HTTP_X_CLIENTIP'];
    } elseif (isset($_SERVER['HTTP_X_REAL_IP']) && isset ($_SERVER ['HTTP_X_CLIENTIP'])) {
        $ip = $_SERVER ['HTTP_X_REAL_IP'];
    }
    if ($ip == "::1") $ip = "127.0.0.1";
    if ($type == 1) {
        return ip2long($ip);
    } else {
        return $ip;
    }
}

/**
 * 方式二
 * list_to_tree 把返回的数据集转换成Tree
 * @param array $list 要转换的数据集
 * @param string $pk 首字段
 * @param string $pid 父标记字段
 * @param string $child 子标记字段
 * @return array
 */
function list_to_tree($list, $pk = 'id', $pid = 'pid', $child = '_child', $root = 0)
{
    // 创建Tree
    $tree = array();
    if (is_array($list)) {
        // 创建基于主键的数组引用
        //p=&a 表明 把a的地址 赋值给p (p是指针)
        $refer = array();
        foreach ($list as $key => $data) {
            $refer[$data[$pk]] =& $list[$key];
        }
        foreach ($list as $key => $data) {
            // 判断是否存在parent
            $parent_id = $data[$pid];
            if ($root == $parent_id) {
                $tree[] =& $list[$key];
            } else {
                if (isset($refer[$parent_id])) {
                    $parent =& $refer[$parent_id];
                    $parent[$child][] =& $list[$key];
                }
            }
        }
    }
    return $tree;
}


//测试调用编辑器
//弃用
function get_editor($name, $values)
{
    $str = <<<HTML
<textarea class="ueditorFlag" id="$name" name="$name" style="width: 100%;">$values</textarea>
<script type="text/javascript">UE.getEditor('$name', {initialFrameHeight: 400});</script>
HTML;
    return $str;
}
